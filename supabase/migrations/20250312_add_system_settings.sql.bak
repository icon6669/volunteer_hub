-- Enable necessary extensions if not already enabled
create extension if not exists "uuid-ossp";

-- Create system_settings table if it doesn't exist
create table if not exists public.system_settings (
    id uuid default uuid_generate_v4() primary key,
    key text unique not null,
    value text not null,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create or update the handle_updated_at function if it doesn't exist
create or replace function public.handle_updated_at()
returns trigger as $$
begin
    new.updated_at = timezone('utc'::text, now());
    return new;
end;
$$ language plpgsql;

-- Create trigger for system_settings table if it doesn't exist
drop trigger if exists handle_system_settings_updated_at on public.system_settings;
create trigger handle_system_settings_updated_at
    before update on public.system_settings
    for each row
    execute function public.handle_updated_at();

-- Enable Row Level Security if not already enabled
alter table public.system_settings enable row level security;

-- Create RLS policy if it doesn't exist
drop policy if exists "Anyone can read system settings" on public.system_settings;
create policy "Anyone can read system settings"
  on public.system_settings for select
  using (true);
